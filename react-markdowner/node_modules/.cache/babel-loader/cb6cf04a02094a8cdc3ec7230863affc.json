{"ast":null,"code":"var _jsxFileName = \"/Users/jonas/Documents/react_markdowner/react-markdowner/src/App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MarkdownRenderer from \"react-markdown-renderer\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport theme from \"@rebass/preset\";\n\nfunction App() {\n  const [markdown, setMarkdown] = React.useState(\"\");\n\n  const handleMarkdownChange = event => {\n    setMarkdown(event.target.value);\n  };\n\n  return React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    value: markdown,\n    onChange: handleMarkdownChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(MarkdownRenderer, {\n    markdown: markdown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jonas/Documents/react_markdowner/react-markdowner/src/App.js"],"names":["React","MarkdownRenderer","ThemeProvider","theme","App","markdown","setMarkdown","useState","handleMarkdownChange","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAGA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAhC;;AAEA,QAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACpCH,IAAAA,WAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAIA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAER,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,KAAK,EAAEE,QAAjB;AAA2B,IAAA,QAAQ,EAAEG,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEH,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJF,CADF,CADF;AAYD;;AAED,eAAeD,GAAf","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MarkdownRenderer from \"react-markdown-renderer\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport theme from \"@rebass/preset\";\n\n\nfunction App() {\n  const [markdown, setMarkdown] = React.useState(\"\");\n\n  const handleMarkdownChange = event => {\n    setMarkdown(event.target.value);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Flex>\n        <Box>\n          <textarea value={markdown} onChange={handleMarkdownChange}></textarea>\n        </Box>\n        <Box>\n        <MarkdownRenderer markdown={markdown} />\n        </Box>\n      </Flex>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}